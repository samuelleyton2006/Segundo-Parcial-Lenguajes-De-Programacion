# Generated from Crud.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,25,196,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,
        1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,
        1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,
        12,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,
        17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,
        19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,
        20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,5,21,163,8,21,10,21,12,21,
        166,9,21,1,21,1,21,1,22,4,22,171,8,22,11,22,12,22,172,1,22,1,22,
        4,22,177,8,22,11,22,12,22,178,3,22,181,8,22,1,23,1,23,5,23,185,8,
        23,10,23,12,23,188,9,23,1,24,4,24,191,8,24,11,24,12,24,192,1,24,
        1,24,0,0,25,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
        45,23,47,24,49,25,1,0,5,2,0,34,34,92,92,1,0,48,57,3,0,65,90,95,95,
        97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,202,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,1,51,1,0,
        0,0,3,59,1,0,0,0,5,67,1,0,0,0,7,69,1,0,0,0,9,71,1,0,0,0,11,73,1,
        0,0,0,13,81,1,0,0,0,15,91,1,0,0,0,17,99,1,0,0,0,19,103,1,0,0,0,21,
        105,1,0,0,0,23,112,1,0,0,0,25,115,1,0,0,0,27,118,1,0,0,0,29,120,
        1,0,0,0,31,122,1,0,0,0,33,125,1,0,0,0,35,128,1,0,0,0,37,135,1,0,
        0,0,39,141,1,0,0,0,41,149,1,0,0,0,43,158,1,0,0,0,45,170,1,0,0,0,
        47,182,1,0,0,0,49,190,1,0,0,0,51,52,5,73,0,0,52,53,5,78,0,0,53,54,
        5,73,0,0,54,55,5,67,0,0,55,56,5,73,0,0,56,57,5,65,0,0,57,58,5,82,
        0,0,58,2,1,0,0,0,59,60,5,69,0,0,60,61,5,78,0,0,61,62,5,84,0,0,62,
        63,5,73,0,0,63,64,5,68,0,0,64,65,5,65,0,0,65,66,5,68,0,0,66,4,1,
        0,0,0,67,68,5,40,0,0,68,6,1,0,0,0,69,70,5,41,0,0,70,8,1,0,0,0,71,
        72,5,59,0,0,72,10,1,0,0,0,73,74,5,79,0,0,74,75,5,66,0,0,75,76,5,
        84,0,0,76,77,5,69,0,0,77,78,5,78,0,0,78,79,5,69,0,0,79,80,5,82,0,
        0,80,12,1,0,0,0,81,82,5,67,0,0,82,83,5,79,0,0,83,84,5,78,0,0,84,
        85,5,68,0,0,85,86,5,73,0,0,86,87,5,67,0,0,87,88,5,73,0,0,88,89,5,
        79,0,0,89,90,5,78,0,0,90,14,1,0,0,0,91,92,5,67,0,0,92,93,5,65,0,
        0,93,94,5,77,0,0,94,95,5,66,0,0,95,96,5,73,0,0,96,97,5,65,0,0,97,
        98,5,82,0,0,98,16,1,0,0,0,99,100,5,67,0,0,100,101,5,79,0,0,101,102,
        5,78,0,0,102,18,1,0,0,0,103,104,5,61,0,0,104,20,1,0,0,0,105,106,
        5,66,0,0,106,107,5,79,0,0,107,108,5,82,0,0,108,109,5,82,0,0,109,
        110,5,65,0,0,110,111,5,82,0,0,111,22,1,0,0,0,112,113,5,61,0,0,113,
        114,5,61,0,0,114,24,1,0,0,0,115,116,5,33,0,0,116,117,5,61,0,0,117,
        26,1,0,0,0,118,119,5,60,0,0,119,28,1,0,0,0,120,121,5,62,0,0,121,
        30,1,0,0,0,122,123,5,60,0,0,123,124,5,61,0,0,124,32,1,0,0,0,125,
        126,5,62,0,0,126,127,5,61,0,0,127,34,1,0,0,0,128,129,5,78,0,0,129,
        130,5,85,0,0,130,131,5,77,0,0,131,132,5,69,0,0,132,133,5,82,0,0,
        133,134,5,79,0,0,134,36,1,0,0,0,135,136,5,84,0,0,136,137,5,69,0,
        0,137,138,5,88,0,0,138,139,5,84,0,0,139,140,5,79,0,0,140,38,1,0,
        0,0,141,142,5,68,0,0,142,143,5,69,0,0,143,144,5,67,0,0,144,145,5,
        73,0,0,145,146,5,77,0,0,146,147,5,65,0,0,147,148,5,76,0,0,148,40,
        1,0,0,0,149,150,5,66,0,0,150,151,5,79,0,0,151,152,5,79,0,0,152,153,
        5,76,0,0,153,154,5,69,0,0,154,155,5,65,0,0,155,156,5,78,0,0,156,
        157,5,79,0,0,157,42,1,0,0,0,158,164,5,34,0,0,159,163,8,0,0,0,160,
        161,5,92,0,0,161,163,9,0,0,0,162,159,1,0,0,0,162,160,1,0,0,0,163,
        166,1,0,0,0,164,162,1,0,0,0,164,165,1,0,0,0,165,167,1,0,0,0,166,
        164,1,0,0,0,167,168,5,34,0,0,168,44,1,0,0,0,169,171,7,1,0,0,170,
        169,1,0,0,0,171,172,1,0,0,0,172,170,1,0,0,0,172,173,1,0,0,0,173,
        180,1,0,0,0,174,176,5,46,0,0,175,177,7,1,0,0,176,175,1,0,0,0,177,
        178,1,0,0,0,178,176,1,0,0,0,178,179,1,0,0,0,179,181,1,0,0,0,180,
        174,1,0,0,0,180,181,1,0,0,0,181,46,1,0,0,0,182,186,7,2,0,0,183,185,
        7,3,0,0,184,183,1,0,0,0,185,188,1,0,0,0,186,184,1,0,0,0,186,187,
        1,0,0,0,187,48,1,0,0,0,188,186,1,0,0,0,189,191,7,4,0,0,190,189,1,
        0,0,0,191,192,1,0,0,0,192,190,1,0,0,0,192,193,1,0,0,0,193,194,1,
        0,0,0,194,195,6,24,0,0,195,50,1,0,0,0,8,0,162,164,172,178,180,186,
        192,1,6,0,0
    ]

class CrudLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    TEXTO = 22
    NUMERO = 23
    IDENTIFICADOR = 24
    WS = 25

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'INICIAR'", "'ENTIDAD'", "'('", "')'", "';'", "'OBTENER'", 
            "'CONDICION'", "'CAMBIAR'", "'CON'", "'='", "'BORRAR'", "'=='", 
            "'!='", "'<'", "'>'", "'<='", "'>='", "'NUMERO'", "'TEXTO'", 
            "'DECIMAL'", "'BOOLEANO'" ]

    symbolicNames = [ "<INVALID>",
            "TEXTO", "NUMERO", "IDENTIFICADOR", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "TEXTO", "NUMERO", "IDENTIFICADOR", "WS" ]

    grammarFileName = "Crud.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


